{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class SearchBoxPipe {\n  transform(data, searchText) {\n    // function getData(item: IProduct, key: number):any {\n    //   if (item.name.toLowerCase().indexOf(searchText.toLowerCase()) > -1) {\n    //     return data[key]\n    //   }\n    // }\n    // return data.filter(getData);\n    return data.filter(item => item.name.toLowerCase().includes(searchText.toLowerCase()));\n  }\n}\n_class = SearchBoxPipe;\n_class.ɵfac = function SearchBoxPipe_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"searchBox\",\n  type: _class,\n  pure: true\n});","map":{"version":3,"names":["SearchBoxPipe","transform","data","searchText","filter","item","name","toLowerCase","includes","pure"],"sources":["/mnt/e/angular_test/src/app/search-box.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'searchBox'\n})\nexport class SearchBoxPipe implements PipeTransform {\n\n  transform(data: IProduct[], searchText: any): any {\n    // function getData(item: IProduct, key: number):any {\n    //   if (item.name.toLowerCase().indexOf(searchText.toLowerCase()) > -1) {\n    //     return data[key]\n    //   }\n    // }\n    // return data.filter(getData);\n\n    return data.filter(item => item.name.toLowerCase().includes(searchText.toLowerCase()));\n  }\n\n}\n"],"mappings":";;AAKA,OAAM,MAAOA,aAAa;EAExBC,SAASA,CAACC,IAAgB,EAAEC,UAAe;IACzC;IACA;IACA;IACA;IACA;IACA;IAEA,OAAOD,IAAI,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACL,UAAU,CAACI,WAAW,EAAE,CAAC,CAAC;EACxF;;SAXWP,aAAa;;mBAAbA,MAAa;AAAA;;;QAAbA,MAAa;EAAAS,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}